{
  "hash": "743806f7733e795829ba6346b8d8630c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Ordinal regression: an overview\"\nauthor: \"Hannah Wilkie\"\ndate: \"2025-04-22\"\ncategories: [news, code, analysis]\nimage: \"image.jpg\"\nexecute:\n  warning: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(performance)\nlibrary(ordinal)\nlibrary(car)\nlibrary(ggeffects)\nlibrary(gofcat) \nlibrary(brms)\nlibrary(emmeans)\nlibrary(knitr)\nlibrary(MASS)\n```\n:::\n\n\n\nIn this section, we'll discuss how to model some of our data using ordinal regression. This will examine the relationship between demographic data and thought types.\n\nLet's reload our data from each half of the concert:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata1 <- read_csv(\"https://raw.githubusercontent.com/hw3446/Final_Project_PUC/main/posts/Dataset_overview/working_data/data.csv\")\n\ndata2 <- read_csv(\"https://raw.githubusercontent.com/hw3446/Final_Project_PUC/main/posts/Dataset_overview/working_data/data2.csv\")\n```\n:::\n\n\n\nBefore constructing models, we'll make sure all of our demographic and outcome variables are classed in the right way.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\noutcome_vars <- c(\"Fictional_story\", \"Abstract_shapes\", \"Sensory_sensations\", \n                  \"Life_experiences\", \"Media\", \"Music\", \"Future_plans\", \n                  \"Building\", \"Everyday\")\n\n# Converting outcome variables to factors with consistent levels for each thought type\ndata1[outcome_vars] <- lapply(data1[outcome_vars], factor, \n                             levels = c(\"Not at all\", \"A small amount of the time\", \n                                        \"A moderate amount of the time\", \"Most of the time\", \n                                        \"All of the time\"))\n\ndata2[outcome_vars] <- lapply(data2[outcome_vars], factor, \n                             levels = c(\"Not at all\", \"A small amount of the time\", \n                                        \"A moderate amount of the time\", \"Most of the time\", \n                                        \"All of the time\"))\n\n#Just remaking the floor variable\ndata1 <- data1 %>%\n  mutate(Floor = ifelse(Location %in% c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"), \"Downstairs\", \"Upstairs\")) %>% relocate(Floor, .after = Location)\n\ndata2 <- data2 %>%\n  mutate(Floor = ifelse(Location %in% c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"), \"Downstairs\", \"Upstairs\")) %>% relocate(Floor, .after = Location)\n\n#Making sure demographic variables are classed in the right way.\ndata1$Age <- as.numeric(data1$Age)\ndata2$Age <- as.numeric(data2$Age)\ndata1$Practice <- as.numeric(as.character(data1$Practice))\ndata2$Practice <- as.numeric(as.character(data2$Practice))\ndata1$Gender <- factor(data1$Gender,  levels = c('Male', 'Female', 'Other'))\ndata2$Gender <- factor(data2$Gender,  levels = c('Male', 'Female', 'Other'))\ndata1$Music_listening <- factor(data1$Music_listening, levels = c('Very rarely', 'Somewhat rarely', 'Moderately frequently', 'Frequently', 'Very frequently'))\ndata2$Music_listening <- factor(data2$Music_listening, levels = c('Very rarely', 'Somewhat rarely', 'Moderately frequently', 'Frequently', 'Very frequently'))\ndata1$Floor <- factor(data1$Floor, levels = c('Downstairs', 'Upstairs'))\ndata2$Floor <- factor(data2$Floor, levels = c('Downstairs', 'Upstairs'))\n```\n:::\n\n\n\nLet's start with a simple model that considers the relationship between a demographic and the likelihood of imagining a fictional story based on a particular demographic variable.\n\nHere's a plot showing the percentage of participants in each ordinal level for fictional story, by gender and age. We're inoring N/As for now:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata1 <- data1 %>%\n  filter(!is.na(Age) & !is.na(Gender) & !is.na(Fictional_story)) %>% filter(Gender != 'Other')\n\nfiction_gender <- data1 %>%\n  group_by(Fictional_story, Gender) %>% summarise(Count = n(), .groups = 'drop') %>%\n  mutate('Percentage' = Count / sum(Count) * 100)\n\nggplot(fiction_gender, aes(x = Fictional_story, y = Percentage, fill = Gender)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(x = \"Level\", y = \"Percentage\", fill = \"Gender\") +\n  ggtitle(\"Percentage in Each Level for Fictional Story by Gender\") +\n  theme_minimal() +   theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Modelling-1_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfiction_age <- data1 %>%\n  group_by(Fictional_story, Age) %>% summarise(Count = n(), .groups = 'drop') %>%\n  mutate('Percentage' = Count / sum(Count) * 100)\n\nfiction_age %>% \n  ggplot(aes(x = Fictional_story, y = Age, fill = Fictional_story)) +\n  geom_boxplot() +\n  xlab(\"Level\") + theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Modelling-1_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n\n\n\nHere's an alternative visualisation with age as a gouped variable:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmax_age <- max(data1$Age, na.rm = TRUE)\nmin_age <- min(data1$Age, na.rm = TRUE)\n\nbreaks <- c(seq(min_age, max_age - 1, by = 20), max_age)\n\ndata1 <- data1 %>%\n  mutate(Age_grouped = cut(Age, \n                           breaks = breaks,\n                           include.lowest = TRUE,\n                           right = TRUE))\n\n\ndata1$Age_grouped <- as.factor(data1$Age_grouped)\n\nfiction_age_grouped <- data1 %>%\n  group_by(Fictional_story, Age_grouped) %>% summarise(Count = n(), .groups = 'drop') %>%\n  mutate('Percentage' = Count / sum(Count) * 100)\n\nggplot(fiction_age_grouped, aes(x = Fictional_story, y = Percentage, fill = Age_grouped)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(x = \"Fictional_story\", y = \"Percentage\", fill = \"Age Group\") +\n  ggtitle(\"Percentage in Each Level for Fictional Story by Age Group\") +\n  theme_minimal() +   theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Modelling-1_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\nTo create an ordinal regression model, we use the clm() function. Here's a simple example showing the relationship between age and likelihood of imagining a fictional story based on data from the first half of the concert.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_fiction_age <- clm(Fictional_story ~ Age, data = data1, Hess = TRUE)\n\nmodel_fiction_age %>% \n  tidy() %>%\n  kable()\n```\n\n::: {.cell-output-display}\n\n\n|term                                                          |   estimate| std.error|  statistic|   p.value|coef.type |\n|:-------------------------------------------------------------|----------:|---------:|----------:|---------:|:---------|\n|Not at all&#124;A small amount of the time                    | -1.2000202| 0.5581174| -2.1501215| 0.0315456|intercept |\n|A small amount of the time&#124;A moderate amount of the time | -0.0056613| 0.5409042| -0.0104663| 0.9916492|intercept |\n|A moderate amount of the time&#124;Most of the time           |  1.0067653| 0.5656944|  1.7796981| 0.0751254|intercept |\n|Most of the time&#124;All of the time                         |  2.4637137| 0.7068055|  3.4857024| 0.0004908|intercept |\n|Age                                                           | -0.0118818| 0.0095693| -1.2416588| 0.2143625|location  |\n\n\n:::\n:::\n\n\n\nBased on the model outcome for the 'Age' term (estimate = -0.0119), we can see that as age increases, respondents are less likely to choose higher categories (e.g. less likely to report experiencing a fictional story frequently). However, p = 0.214, so this is not statistically significant.\n\n`ggemmeans` can be used to visualise the model.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredictions <- ggemmeans(model_fiction_age, terms = \"Age\")\n\nggplot(predictions, aes(x = x, y = predicted, fill = response.level)) +\n  geom_area() + \n  labs(x = \"\\nAge\", \n       y = \"Predicted Probability\\n\", \n       title = \"Fictional_story by Age\") +\n  scale_fill_manual(\n    name = NULL,\n    values = c(\"#deebf7\", \"#9ecae1\", \"#3182bd\", \"#08519c\", \"#08306b\"),\n    labels = c(\"Not at all\",\n               \"A small amount of the time\",\n               \"A moderate amount of the time\",\n               \"Most of the time\",\n               \"All of the time\")\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Modelling-1_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\nIt's also good to run a brant test to tell us whether the proportional odds assumption holds in our current model. The assumption is that the relationship between predictor and output is the same across all levels of the ordinal outcomes.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbrant.test(model_fiction_age)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nBrant Test:\n           chi-sq   df   pr(>chi)\nOmnibus      2.64    3       0.45\nAge          2.64    3       0.45\n\nH0: Proportional odds assumption holds\n```\n\n\n:::\n:::\n\n\n\nFrom the above, we can see that the proportional odds assumption does hold in our model.\n\nMODEL COMPARISONS\n\nLet's do some comparing comparison now. Here we're going to integrate age and gender into the same model.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFiction_int = clm(Fictional_story ~ Gender*Age, data=data1)\n\n    tidy(Fiction_int) %>%\n      kable()\n```\n\n::: {.cell-output-display}\n\n\n|term                                                          |   estimate| std.error|  statistic|   p.value|coef.type |\n|:-------------------------------------------------------------|----------:|---------:|----------:|---------:|:---------|\n|Not at all&#124;A small amount of the time                    | -0.9149422| 0.8400896| -1.0891007| 0.2761095|intercept |\n|A small amount of the time&#124;A moderate amount of the time |  0.3051990| 0.8402217|  0.3632362| 0.7164284|intercept |\n|A moderate amount of the time&#124;Most of the time           |  1.3205635| 0.8608620|  1.5340014| 0.1250293|intercept |\n|Most of the time&#124;All of the time                         |  2.7692707| 0.9543832|  2.9016340| 0.0037122|intercept |\n|GenderFemale                                                  |  0.5410978| 1.0907027|  0.4961002| 0.6198237|location  |\n|Age                                                           | -0.0033337| 0.0145300| -0.2294329| 0.8185324|location  |\n|GenderFemale:Age                                              | -0.0161627| 0.0194180| -0.8323554| 0.4052083|location  |\n\n\n:::\n:::\n\n\n\nWe can compare this against the model using just age.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_int <- clm(Fictional_story ~ Gender*Age, data = data1)\nmodel_no_int <- clm(Fictional_story ~ Age, data = data1)\n\nanova(model_int, model_no_int) %>% kable()\n```\n\n::: {.cell-output-display}\n\n\n|             | no.par|      AIC|    logLik|  LR.stat| df| Pr(>Chisq)|\n|:------------|------:|--------:|---------:|--------:|--:|----------:|\n|model_no_int |      5| 269.0693| -129.5346|       NA| NA|         NA|\n|model_int    |      7| 271.7126| -128.8563| 1.356628|  2|   0.507472|\n\n\n:::\n:::\n\n\n\nHere the p value is still significantly above 0.05, so adding gender as an interaction variable doesn't significantly improve the model.\n\nThe question is, how can we select the correct models with the optimum demographic inputs? This is what will be covered in the 'Model Selection' portion of this blog.\n",
    "supporting": [
      "Modelling-1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}